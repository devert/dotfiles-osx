[color]
	ui = true
[core]
	autoctrl = input
	excludesfile = /Users/dennisevert/.gitignore_global
	editor = nvim
[merge]
	ff = false
[push]
	default = current
[alias]
	# add
	a = add													# add
	aa = add --all									# add all files
	au = add -u 										# add all deleted files
	ap = add --patch								# stage commits chunk by chunk

	# aliases
	la = "!git config --get-regexp '^alias\\.' | cut -c 7- | sed 's/ / = /'" # output all aliases

	# branch
	b = branch -v										# branch (verbose)
	bd = branch -d									# branch delete
	bdf = branch -D									# branch force delete

	# commit
	c = commit -m 									# commit with message
	ca = commit -am									# commit all with message
	amend = commit --amend					# amend your last commit

	# checkout
	co = checkout										# checkout
	nb = checkout -b								# create and switch to a new branch (mnemonic: "git new branch branchname...")

	# diff
	d = diff												# diff unstaged changes
	dc = diff --cached							# diff staged changes
	last = diff HEAD^								# diff last committed change

	# update-index
	ignore = !git update-index --assume-unchanged 
	unignore = !git update-index --no-assume-unchanged
	ignored = !git ls-files -v | grep ^[a-z]

	# log
	l = log --graph --date=short
	changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
	short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
	changelog = log --pretty=format:\" * %s\"
	shortnocolor = log --pretty=format:\"%h %cr %cn %s\"

	# pull
	pl = pull												# pull

	# prune
	po = remote prune origin				# prune origin

	# pull request
	pr = !hub pull-request					# pull request

	# push
	ps = push												# push

	# rebase
	rc = rebase --continue					# continue rebase
	rs = rebase --skip							# skip rebase

	# remote
	rv = remote -v										# show remotes (verbose)

	# reset
	rhh = reset --hard HEAD
	unstage = reset HEAD						# remove files from index (tracking)
	uncommit = reset --soft HEAD^		# go back before last commit, with files in uncommitted state
	filelog = log -u								# show changes to a file
	mt = mergetool									# fire up the merge tool

	# stash
	ss = stash											# stash changes
	sl = stash list									# list stashes
	sa = stash apply								# apply stash (restore changes)
	sd = stash drop									# drop stashes (destory changes)

	# status
	s = status											# status
	st = status											# status
	stat = status                   # status

	# tag
	t = tag -n											# show tags with <n> lines of each tag message

	# https://adamcod.es/2014/12/10/git-pull-correct-workflow.html
	update-from = "!f() { git fetch $1 --prune; git merge --ff-only $1/$2 || git rebase --preserve-merges $1/$2; }; f"
	uf = update-from

	# https://zarino.co.uk/post/git-set-upstream/
	set-upstream = !git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`
	su = set-upstream
[difftool "sourcetree"]
	cmd = /Applications/kdiff3.app/Contents/MacOS/kdiff3 \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/kdiff3.app/Contents/MacOS/kdiff3 \"$BASE\" \"$LOCAL\" \"$REMOTE\" -o \"$MERGED\"
	trustExitCode = true
[user]
	name = Dennis Evert
	email = dennis.evert@ave81.com
[commit]
	template = /Users/dennisevert/.stCommitMsg
