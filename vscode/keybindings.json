[
  // Editor
  // ---------------------------------------------------------------------------
  {
    "key": "shift+cmd+space",
    "command": "closeParameterHints",
    "when": "editorTextFocus && parameterHintsVisible"
  },

  // Search
  // ---------------------------------------------------------------------------
  {
    "key": "cmd+shift+f",
    "command": "search.action.openNewEditor"
  },
  
  // Workbench
  // ---------------------------------------------------------------------------
  {
    "key": "ctrl+shift+left",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "ctrl+shift+right",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.decreaseViewSize"
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+shift+-",
    "command": "workbench.files.action.collapseExplorerFolders"
  },

  // Terminal
  // ---------------------------------------------------------------------------
  {
    "key": "ctrl+tab",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+d",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+/",
    "command": "runCommands",
    "args": {
      "commands": [
        {
          "command": "workbench.action.positionPanelRight"
        },
        {
          "command": "workbench.action.terminal.focus"
        }
      ]
    },
    "when": "terminalFocus"
  },
  {
    "key": "cmd+shift+/",
    "command": "runCommands",
    "args": {
      "commands": [
        {
          "command": "workbench.action.positionPanelBottom"
        },
        {
          "command": "workbench.action.terminal.focus"
        }
      ]
    },
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+enter",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+1", // overrides default behavior to focus first in active editor group
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },

  // Vim Movement
  // ---------------------------------------------------------------------------
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus"
  },

  // Github Copilot
  // ---------------------------------------------------------------------------
  {
    "key": "alt+space",
    "command": "editor.action.inlineSuggest.trigger",
    "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
  },
  {
    "key": "ctrl+j",
    "command": "github.copilot.nextPanelSolution",
    "when": "github.copilot.activated && github.copilot.panelVisible"
  },
  {
    "key": "ctrl+k",
    "command": "github.copilot.previousPanelSolution",
    "when": "github.copilot.activated && github.copilot.panelVisible"
  },
  {
    "key": "ctrl+space",
    "command": "github.copilot.acceptCursorPanelSolution",
    "when": "github.copilot.activated && github.copilot.panelVisible"
  }
]
