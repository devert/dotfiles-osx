[user]
	name = Dennis Evert
	email = devert@olson.com
[color]
	ui = true
[core]
	autoctrl = input
	excludesfile = /Users/34457/.gitignore_global
[merge]
	ff = false
[push]
	default = matching
[alias]
	# add
	a = add													# add
	aa = add --all									# add all files
	au = add -u 										# add all deleted files
	ap = add --patch								# stage commits chunk by chunk

	# branch
	b = branch -v										# branch (verbose)

	# commit
	c = commit -m 									# commit with message
	ca = commit -am									# commit all with message
	amend = commit --amend					# amend your last commit

	# checkout
	co = checkout										# checkout
	nb = checkout -b								# create and switch to a new branch (mnemonic: "git new branch branchname...")

	# diff
	d = diff												# diff unstaged changes
	dc = diff --cached							# diff staged changes
	last = diff HEAD^								# diff last committed change

	# log
	l = log --graph --date=short
	changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
	short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
	changelog = log --pretty=format:\" * %s\"
	shortnocolor = log --pretty=format:\"%h %cr %cn %s\"

	# pull
	pl = pull												# pull

	# pull request
	pr = !hub pull-request					# pull request

	# push
	ps = push												# push

	# rebase
	rc = rebase --continue					# continue rebase
	rs = rebase --skip							# skip rebase

	# remote
	r = remote -v										# show remotes (verbose)

	# reset
	unstage = reset HEAD						# remove files from index (tracking)
	uncommit = reset --soft HEAD^		# go back before last commit, with files in uncommitted state
	filelog = log -u								# show changes to a file
	mt = mergetool									# fire up the merge tool

	# stash
	ss = stash											# stash changes
	sl = stash list									# list stashes
	sa = stash apply								# apply stash (restore changes)
	sd = stash drop									# drop stashes (destory changes)

	# status
	s = status											# status
	st = status											# status
	stat = status                   # status

	# tag
	t = tag -n											# show tags with <n> lines of each tag message
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
